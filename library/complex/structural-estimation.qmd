# Structural estimation {.unnumbered}

```{r}
#| echo: false
#| include: false
#| purl:  false
source("scripts/before_chapter_script.R")
```

:::: {.ddbox}
We declare a design in which a researcher wants to use experimental data to estimate the parameters of a game theoretic model. The premise of the approach is that, to the extent that the model is correct, in-sample parameter estimation allows the researcher to make interesting external inferences to effects in other settings. The risk is that bad models will produce bad inferences. 
::::

Structural estimation is used when researchers have in mind a model for how processes work and their goal is to estimate the parameters of that model. If only they knew the parameters of the model, they could draw inferences about levels of unobserved variables, treatment effects, or other quantities. They might even extrapolate to estimate counterfactual quantities, such as the effects of interventions that have not been implemented [@reiss2007structural]. 

We illustrate this design with a bargaining game, drawing on an example used in @wilke2020field. We imagine a customer $i$ makes payments from some endowment to a taxi driver. Bargaining proceeds as one player makes an offer that is accepted or rejected; if rejected the other player makes a counteroffer. The game continues for $n$ rounds with zero payoffs if no deal is agreed. Our main interest is the share of the endowment retained by the customer. 

In Declaration @def:declaration-19-2, we imagine two types of customers, strategic ($\theta_i = 0$) and nonstrategic ($\theta_i = 1$). If a customer is strategic, the equilibrium offer made by the first mover is the one predicted by the solution given in @rubinstein1982perfect. If however, the player is nonstrategic then they always (successfully) insist on invoking a payment norm that lets them retaining a fixed share of their endowment, $\tilde{\pi}$. We let $\alpha$ denote the probability that a player is nonstrategic. A player's payoff then is given by:

$$\pi_i =  (1-\theta_i)(z_i\hat{\pi} + (1-z_i)(1-\pi)) + \theta_i\tilde{\pi}$$

where $$\hat{\pi} = \sum_{j = 2}^n(-1^{j})\delta^{j-1}$$ 

is the Rubinstein solution. The customer's payoff depends on whether they goes first ($z_i = 1$) or second ($z_i = 0$) and on the common discount factor $\delta$.

One complication with structural estimation is that it's hard to know what to infer when an action is taken that the model says shouldn't happen -- suppose negotiations didn't reach $\tilde{\pi}$ when they should have. A common way to address this challenge is to allow for the possibility that *implemented* actions are noisy reflections of *predicted* actions; noisy either because of measurement error or because in fact players deviate randomly from optimal behavior. Here we will allow for a disturbance like this by assuming that *measured* payments, $y$, are a random draw from a Beta distribution with expectation given by the expected payment $\pi$ and variance $\kappa$. 

In our data strategy, we randomly assign $Z$ (who goes first) and measure payments $y$. We will also assume we know what norms nonstrategic players are following, specifically that $\tilde{\pi} = 0.75$. Our goal is to use observed payments along with treatment allocation to estimate the model parameters, $\alpha$, $\delta$, $\kappa$. These in turn can be used to estimate treatment effects and other counterfactual quantities (if we assume the model is true).

Our inquiries are the parameters `k`, `d`, and `a` (corresponding to $\kappa$, $\delta$ and $\alpha$). We set up the design so that we can vary these features easily but also so that we can vary $n$ (the total number of rounds in the bargaining game).

The answer strategy is implemented using maximum likelihood to identify which parameter values are most consistent with the data. More specifically this approach takes the model as true and asks for what collection of parameter values is the observed data most likely. See @king1998unifying for an introduction to the method of maximum likelihood. One nice feature of the method is that the problem of maximizing the likelihood is (asymptotically) equivalent to finding the probability distribution that minimizes the Kullbackâ€“Leibler divergence to the true probability distribution (of course, all that within the class of distributions that can be specified under the model). For more see @white1982maximum.

The heart of the estimation strategy is the specification of likelihood function. The likelihood function reports the probability of the data given particular stipulated values of the parameters. This value is different depending on $n$ so in fact we write down a function that writes a function given $n$. The likelihood function reflects the theoretical model described above, which means that in this declaration, the same event generating process is used in *M* and in the construction of the likelihood function in *A*. An optimistic assumption.

:::{.definition #declaration-19-2} 

Structural estimation declaration

With the likelihood function defined, we can declare a design with an estimation step that uses the `bbmle` package   

```{r, file = "scripts_declarations/declaration_19.2.R"}

```

:::

:::{.lemma #diagnosis-19-2}

Structural estimation diagnosis

```{r}
#| eval: false

diagnosis_19.2 <- diagnose_design(declaration_19.2) 
```

```{r, echo = FALSE, purl = FALSE}
diagnosis_19.2 <- get_rdddr_file_local("diagnosis_19.2")
```

```{r structuraldiagnosisa, echo = FALSE}
diagnosis_19.2 |> 
  reshape_diagnosis() |>
  select(Inquiry, 'Mean Estimand', Bias, RMSE) |>
  kable(caption = "Estimation of structural parameters from behavior in a bargaining game", digits = 3) 
```

Turning to diagnosis we see first that we do a good job in recovering parameter values. All three parameters are estimated precisely. From these, we can calculate estimates of causal quantities such as the first mover advantage and assess the extent to which this depends on features such as the length of the game. 

As always, diagnosis can be used to fine-tune designs. In figure @fig-figure-19-4, we compare design performance as we vary $\alpha$ and $n$. We see from the comparison of designs that estimates are less accurate when either longer games are used or when there are many nonstrategic players. Shorter games have an advantage here of producing a more pronounced difference in the payoffs of first and second movers. The gains from shorter games are especially pronounced in settings in which many nonstrategic players dampen the variation in payoffs. Though not shown here, it we can also use design diagnosis to show that the design fails if we set $n$ at 3 (for instance) as in this case $\delta$ is not identified (the same probability distribution is consistent with different values for $\delta$).

![Performance of the structural estimation design depends on the number of rounds and the types of players.](/figures/figure-19-4){#fig:figure-19-4}

The basic structure used here can be used for a wide range of structural models. The first step is to write down the theory well enough to specify the implied likelihood function. Doing so might require adding noise to the model so that the data that are seen in practice can be seen in theory. The next step is to estimate the model parameters that have the greatest likelihood of having producing the observed data. (The same fundamental approach can be used with estimation via Bayesian methods or methods of moments.) 

The payoffs from structural estimation can be great: we can operationalize our theoretical models to make specific real-world predictions by disciplining them with real-world information. The risks are large too. Because the inferences are necessarily model dependent, model misspecification can lead to faulty conclusions. When doing structural estimation, apply Principle @exm-designagnostically: Design agnostically liberally. 

:::

## Design examples

- @Samii2016 enumerates some examples of structural estimation in economics and predicts future political scientists will take to structural estimation in earnest.

- @francois2015power provides a structural model to explain how leaders allocate  cabinet positions to bolseter coalitions; the analysis compares the performance of a preferred theory to rival theories. 

- @Frey2022 estimates a structural model of party competition and coalitions on the basis of a regression discontinuity design. With the model parameters estimated, the authors simulate counterfactual scenarios without party coalitions.

